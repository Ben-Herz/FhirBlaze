@using System.Reflection
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Microsoft.Extensions.Logging
@inject LazyAssemblyLoader AssemblyLoader
@inject ILogger<App> Logger


  <CascadingBlazoredModal> 
    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="@lazyLoadedAssemblies" OnNavigateAsync="@OnNavigateAsync">
            <Found Context="routeData">
                <CascadingAuthenticationState>
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                </CascadingAuthenticationState>
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    
    </CascadingAuthenticationState>
</CascadingBlazoredModal> 


@*<CascadingBlazoredModal>  
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">  
        <Found Context="routeData">  
            <Route ViewRouteData="@routeData"DefaultLayout="@typeof(MainLayout)"/>  
        </Found>  
        <NotFound>  
            <LayoutView Layout="@typeof(MainLayout)">  
                <p>Sorry, there's nothing at this address.</p>  
            </LayoutView>  
        </NotFound>  
    </Router>  
</CascadingBlazoredModal> *@
 

@code {
    private List<Assembly> lazyLoadedAssemblies = new();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path == "patient")
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(
                    new[] { "FhirBlaze.PatientModule.dll", "FhirBlaze.SharedComponents.dll" });
                lazyLoadedAssemblies.AddRange(assemblies);
            }
            if (args.Path.StartsWith("questionnaire") || args.Path == "createquestionnaire")
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(
                    new[] { "FhirBlaze.QuestionnaireModule.dll", "FhirBlaze.SharedComponents.dll" });
                lazyLoadedAssemblies.AddRange(assemblies);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError("Error: {Message}", ex.Message);
        }
    }
}
