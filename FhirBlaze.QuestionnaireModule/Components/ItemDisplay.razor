@using Hl7.Fhir.Model
   
     <div class="card-body">
        <label class="sr-only" >@GetTitleText(ItemComponent)</label>
        <input type='text' required class='form-control' id='question' placeholder=@GetTitleText(ItemComponent) @bind-value='ItemComponent.Text' >
        
        <label  class="sr-only">LinkId:</label>
        <input type='text' required class='form-control' placeholder='linkId' @bind-value='ItemComponent.LinkId'>
            
        
        @switch (ItemComponent.Type)
        {
            case Questionnaire.QuestionnaireItemType.Group:               
                int x = 0;
                bool disableDown = true;
                bool disableUp = true;

                foreach(var groupitem in ItemComponent.Item)
                {
                    <div class="border border-primary rounded-left  rounded-right p-2">
                        <div class="row">
                            <div class="col-sm">@GetHeader(groupitem)</div>
                            <div class="col-sm btn-group">  <p class="ml-auto">                 
                                @if (x != ItemComponent.Item.Count-1 && ItemComponent.Item.Count>1)
                                {
                                  disableDown = false;
                                }
                                @if (x!=0 && ItemComponent.Item.Count>1)
                                {
                                  disableUp = false;  
                                }
                                <button type="button" disabled="@disableDown" class="btn btn-primary" @onclick="()=>OnDownClick(groupitem)"><span class="oi oi-arrow-thick-bottom" /></button>
                                <button type="button" disabled="@disableUp" class="btn btn-primary" @onclick="()=>OnUpClick(groupitem)"><span class="oi oi-arrow-thick-top" /></button>                                
                                <button type="button" class="btn btn-primary" @onclick="()=>RemoveItem(groupitem)"><span class="oi oi-trash" /></button>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <ItemDisplay ItemComponent=groupitem/>
                            </div>                
                        </div>
                    </div>
                    disableDown = true;
                    disableUp = true;
                    x++;
            }
            break;
        case Questionnaire.QuestionnaireItemType.Choice:
            int ansnum= 1;            
            @foreach (var opt in ItemComponent.AnswerOption)
            {
               <div class="row">
                   <form class="form-inline">
                   <div class="col-sm-1">#@ansnum</div>
                   <div class="col-sm-10"><AnswerCoding Coding=(Coding)opt.Value /></div>
                   <div class="col-sm-1"><button type="button" class="btn btn-primary" @onclick="()=>ItemComponent.AnswerOption.Remove(opt)"><span class="oi oi-trash" /></button></div>
                   </form>
              </div>
              ansnum++;
            }
            <button type="button" @onclick=AddAnswer >Add Choice</button>
            break;
        default:
            break;
    }

    @if (ItemComponent.Type.Equals(Questionnaire.QuestionnaireItemType.Group))
    {
       <div>
        <ItemTypeComponent ItemSelected="AddItem" />
       </div> 
    }
  </div>