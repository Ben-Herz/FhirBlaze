@page "/patient/{Id}"
@using FhirBlaze.SharedComponents.SMART
@using Hl7.Fhir.Model;
@using Newtonsoft.Json
@inject NavigationManager UriHelper
@inject SmartLauncher Launcher
@inject IFhirService fhirService
<div class="container">
	<h3>Patient Detail</h3>
	<div class="card border-primary mb-3" style="max-width: 18rem;">        
        <h5 class="card-header">
            @CurrentPatient.Name?.FirstOrDefault() - (@CurrentPatient.Gender)
        </h5>
        <div class="card-body">
            <p class="card-text">
                Address: @CurrentPatient.Address?.FirstOrDefault()
                <br />
                Phone: @CurrentPatient.Telecom?.FirstOrDefault()
                <br />
                Date of Birth: @CurrentPatient.BirthDate
                <br />
                Email: @CurrentPatient.Contact?.FirstOrDefault()
            </p>
            <button type="button" class="btn btn-primary">Active: @CurrentPatient.Active</button>
            <a class="btn btn-primary" target="_blank" href="@ChestistLaunchUrl">Chestist</a>
            @*<button type="button" class="btn btn-primary" @onclick="LaunchClick">Chestist</button>*@
            <button type="button" class="btn btn-primary" @onclick="LaunchQuestionnaire">Take Survey</button>
        </div>          
    </div>
    <div class="container">
        <div>Observations:</div>
        @foreach(var o in PatientObservations)
        {            
            <ObservationDisplay Observation="o" />
        }
    </div>
</div>


@code {

    [Parameter]
    public string Id { get; set; }

    public string ChestistLaunchUrl { get; set; }
    public IList<Observation> PatientObservations { get; set; } = new List<Observation>();
    public Patient CurrentPatient { get; set; } = new Patient();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        CurrentPatient = await fhirService.GetResourceByIdAsync<Patient>(Id);
        var ctx = new
        {
            patient = CurrentPatient.Id
        };
        ChestistLaunchUrl = Launcher.GetLaunchUrl(JsonConvert.SerializeObject(ctx));

        PatientObservations = await fhirService.GetPatientObservations(ctx.patient);
    }

    public void LaunchClick()
    {
        var ctx = new
        {
            patient = CurrentPatient.Id
        };
        var href = Launcher.GetLaunchUrl(JsonConvert.SerializeObject(ctx));
        UriHelper.NavigateTo(href);
    }

    public void LaunchQuestionnaire()
    {

    }
}
